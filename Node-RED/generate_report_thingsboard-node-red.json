[
    {
        "id": "c07cd53ea116753b",
        "type": "tab",
        "label": "Generate report",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "99217d5ddf806dbf",
        "type": "inject",
        "z": "c07cd53ea116753b",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "5714055bab1afbfe"
            ]
        ]
    },
    {
        "id": "13c9b5407261e5ed",
        "type": "http request",
        "z": "c07cd53ea116753b",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://{{thingsboard_host}}/api/auth/login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Content-Type",
                "valueType": "other",
                "valueValue": "application/json"
            },
            {
                "keyType": "other",
                "keyValue": "Accept",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 530,
        "y": 100,
        "wires": [
            [
                "0e6355bc4a42d860"
            ]
        ]
    },
    {
        "id": "9aceea180574bcd3",
        "type": "debug",
        "z": "c07cd53ea116753b",
        "name": "debug ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 100,
        "wires": []
    },
    {
        "id": "5714055bab1afbfe",
        "type": "function",
        "z": "c07cd53ea116753b",
        "name": "function",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.payload = {\n    username: \"{{username}}\",\n    password: \"{{password}}\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 100,
        "wires": [
            [
                "13c9b5407261e5ed"
            ]
        ]
    },
    {
        "id": "0e6355bc4a42d860",
        "type": "change",
        "z": "c07cd53ea116753b",
        "name": "change",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "flow",
                "to": "payload.token",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 100,
        "wires": [
            [
                "9aceea180574bcd3"
            ]
        ]
    },
    {
        "id": "d12c9b83bd2ebd0a",
        "type": "inject",
        "z": "c07cd53ea116753b",
        "name": "inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "aec0534e90516d75"
            ]
        ]
    },
    {
        "id": "3753837d859ddd2b",
        "type": "http request",
        "z": "c07cd53ea116753b",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://{{thingsboard_host}}/api/device/{{device_id}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Content-Type",
                "valueType": "other",
                "valueValue": "application/json"
            },
            {
                "keyType": "other",
                "keyValue": "Accept",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 530,
        "y": 200,
        "wires": [
            [
                "10ce95c1d4d84ec5"
            ]
        ]
    },
    {
        "id": "10ce95c1d4d84ec5",
        "type": "debug",
        "z": "c07cd53ea116753b",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 200,
        "wires": []
    },
    {
        "id": "aec0534e90516d75",
        "type": "function",
        "z": "c07cd53ea116753b",
        "name": "function ",
        "func": "// Configurar las cabeceras con el token JWT\nvar token = flow.get(\"token\");\nmsg.headers = {\n    \"Content-Type\": \"application/json\",\n    \"X-Authorization\": \"Bearer \" + token\n};\n\nmsg.payload = {\n    username: \"{{username}}\",\n    password: \"{{password}}\"\n};\n\n// Configurar la URL del dispositivo en ThingsBoard\nmsg.url = \"http://{{thingsboard_host}}/api/device/{{device_id}}\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "3753837d859ddd2b"
            ]
        ]
    }
]